{"version":3,"sources":["libs/buffer.js"],"names":["define","base64","ieee754","exports","Buffer","SlowBuffer","length","alloc","INSPECT_MAX_BYTES","K_MAX_LENGTH","createBuffer","RangeError","buf","Uint8Array","__proto__","prototype","arg","encodingOrOffset","Error","allocUnsafe","from","value","TypeError","isArrayBuffer","buffer","array","byteOffset","byteLength","undefined","fromArrayBuffer","string","encoding","isEncoding","actual","write","slice","fromString","obj","isBuffer","len","checked","copy","ArrayBuffer","isView","numberIsNaN","fromArrayLike","type","Array","isArray","data","fromObject","assertSize","size","i","toString","loweredCase","utf8ToBytes","base64ToBytes","toLowerCase","swap","b","n","m","bidirectionalIndexOf","val","dir","arrayIndexOf","indexOf","call","lastIndexOf","arr","indexSize","arrLength","valLength","String","read","readUInt16BE","foundIndex","found","j","hexWrite","offset","Number","remaining","strLen","parsed","parseInt","substr","utf8Write","blitBuffer","asciiWrite","str","byteArray","push","charCodeAt","asciiToBytes","latin1Write","base64Write","ucs2Write","units","c","hi","lo","utf16leToBytes","base64Slice","start","end","fromByteArray","utf8Slice","Math","min","res","secondByte","thirdByte","fourthByte","tempCodePoint","firstByte","codePoint","bytesPerSequence","codePoints","MAX_ARGUMENTS_LENGTH","fromCharCode","apply","decodeCodePointsArray","kMaxLength","TYPED_ARRAY_SUPPORT","foo","e","typedArraySupport","console","error","Object","defineProperty","get","this","Symbol","species","configurable","enumerable","writable","poolSize","fill","allocUnsafeSlow","_isBuffer","compare","a","x","y","concat","list","pos","swap16","swap32","swap64","arguments","hexSlice","asciiSlice","latin1Slice","utf16leSlice","toLocaleString","equals","inspect","max","match","join","target","thisStart","thisEnd","thisCopy","targetCopy","includes","isFinite","toJSON","_arr","ret","out","toHex","bytes","checkOffset","ext","checkInt","checkIEEE754","writeFloat","littleEndian","noAssert","writeDouble","newBuf","subarray","readUIntLE","mul","readUIntBE","readUInt8","readUInt16LE","readUInt32LE","readUInt32BE","readIntLE","pow","readIntBE","readInt8","readInt16LE","readInt16BE","readInt32LE","readInt32BE","readFloatLE","readFloatBE","readDoubleLE","readDoubleBE","writeUIntLE","writeUIntBE","writeUInt8","writeUInt16LE","writeUInt16BE","writeUInt32LE","writeUInt32BE","writeIntLE","limit","sub","writeIntBE","writeInt8","writeInt16LE","writeInt16BE","writeInt32LE","writeInt32BE","writeFloatLE","writeFloatBE","writeDoubleLE","writeDoubleBE","targetStart","copyWithin","set","code","INVALID_BASE64_RE","Infinity","leadSurrogate","toByteArray","split","trim","replace","base64clean","src","dst","constructor","name"],"mappings":"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","file":"../../libs/buffer.js","sourcesContent":["define([\r\n  \"./base64\",\r\n  \"./ieee754\"\r\n],function(base64,ieee754){\r\n  /*!\r\n   * The buffer module from node.js, for the browser.\r\n   *\r\n   * @author   Feross Aboukhadijeh <https://feross.org>\r\n   * @license  MIT\r\n   */\r\n  /* eslint-disable no-proto */\r\n\r\n  'use strict'\r\n\r\n  var exports = {};\r\n\r\n  ///var base64 = require('base64-js')\r\n  ///var ieee754 = require('ieee754')\r\n\r\n  exports.Buffer = Buffer\r\n  exports.SlowBuffer = SlowBuffer\r\n  exports.INSPECT_MAX_BYTES = 50\r\n\r\n  var K_MAX_LENGTH = 0x7fffffff\r\n  exports.kMaxLength = K_MAX_LENGTH\r\n\r\n  /**\r\n   * If `Buffer.TYPED_ARRAY_SUPPORT`:\r\n   *   === true    Use Uint8Array implementation (fastest)\r\n   *   === false   Print warning and recommend using `buffer` v4.x which has an Object\r\n   *               implementation (most compatible, even IE6)\r\n   *\r\n   * Browsers that support typed arrays are IE 10+, Firefox 4+, Chrome 7+, Safari 5.1+,\r\n   * Opera 11.6+, iOS 4.2+.\r\n   *\r\n   * We report that the browser does not support typed arrays if the are not subclassable\r\n   * using __proto__. Firefox 4-29 lacks support for adding new properties to `Uint8Array`\r\n   * (See: https://bugzilla.mozilla.org/show_bug.cgi?id=695438). IE 10 lacks support\r\n   * for __proto__ and has a buggy typed array implementation.\r\n   */\r\n  Buffer.TYPED_ARRAY_SUPPORT = typedArraySupport()\r\n\r\n  if (!Buffer.TYPED_ARRAY_SUPPORT && typeof console !== 'undefined' &&\r\n      typeof console.error === 'function') {\r\n    console.error(\r\n      'This browser lacks typed array (Uint8Array) support which is required by ' +\r\n      '`buffer` v5.x. Use `buffer` v4.x if you require old browser support.'\r\n    )\r\n  }\r\n\r\n  function typedArraySupport () {\r\n    // Can typed array instances can be augmented?\r\n    try {\r\n      var arr = new Uint8Array(1)\r\n      arr.__proto__ = {__proto__: Uint8Array.prototype, foo: function () { return 42 }}\r\n      return arr.foo() === 42\r\n    } catch (e) {\r\n      return false\r\n    }\r\n  }\r\n\r\n  Object.defineProperty(Buffer.prototype, 'parent', {\r\n    get: function () {\r\n      if (!(this instanceof Buffer)) {\r\n        return undefined\r\n      }\r\n      return this.buffer\r\n    }\r\n  })\r\n\r\n  Object.defineProperty(Buffer.prototype, 'offset', {\r\n    get: function () {\r\n      if (!(this instanceof Buffer)) {\r\n        return undefined\r\n      }\r\n      return this.byteOffset\r\n    }\r\n  })\r\n\r\n  function createBuffer (length) {\r\n    if (length > K_MAX_LENGTH) {\r\n      throw new RangeError('Invalid typed array length')\r\n    }\r\n    // Return an augmented `Uint8Array` instance\r\n    var buf = new Uint8Array(length)\r\n    buf.__proto__ = Buffer.prototype\r\n    return buf\r\n  }\r\n\r\n  /**\r\n   * The Buffer constructor returns instances of `Uint8Array` that have their\r\n   * prototype changed to `Buffer.prototype`. Furthermore, `Buffer` is a subclass of\r\n   * `Uint8Array`, so the returned instances will have all the node `Buffer` methods\r\n   * and the `Uint8Array` methods. Square bracket notation works as expected -- it\r\n   * returns a single octet.\r\n   *\r\n   * The `Uint8Array` prototype remains unmodified.\r\n   */\r\n\r\n  function Buffer (arg, encodingOrOffset, length) {\r\n    // Common case.\r\n    if (typeof arg === 'number') {\r\n      if (typeof encodingOrOffset === 'string') {\r\n        throw new Error(\r\n          'If encoding is specified then the first argument must be a string'\r\n        )\r\n      }\r\n      return allocUnsafe(arg)\r\n    }\r\n    return from(arg, encodingOrOffset, length)\r\n  }\r\n\r\n  // Fix subarray() in ES2016. See: https://github.com/feross/buffer/pull/97\r\n  if (typeof Symbol !== 'undefined' && Symbol.species &&\r\n      Buffer[Symbol.species] === Buffer) {\r\n    Object.defineProperty(Buffer, Symbol.species, {\r\n      value: null,\r\n      configurable: true,\r\n      enumerable: false,\r\n      writable: false\r\n    })\r\n  }\r\n\r\n  Buffer.poolSize = 8192 // not used by this implementation\r\n\r\n  function from (value, encodingOrOffset, length) {\r\n    if (typeof value === 'number') {\r\n      throw new TypeError('\"value\" argument must not be a number')\r\n    }\r\n\r\n    if (isArrayBuffer(value) || (value && isArrayBuffer(value.buffer))) {\r\n      return fromArrayBuffer(value, encodingOrOffset, length)\r\n    }\r\n\r\n    if (typeof value === 'string') {\r\n      return fromString(value, encodingOrOffset)\r\n    }\r\n\r\n    return fromObject(value)\r\n  }\r\n\r\n  /**\r\n   * Functionally equivalent to Buffer(arg, encoding) but throws a TypeError\r\n   * if value is a number.\r\n   * Buffer.from(str[, encoding])\r\n   * Buffer.from(array)\r\n   * Buffer.from(buffer)\r\n   * Buffer.from(arrayBuffer[, byteOffset[, length]])\r\n   **/\r\n  Buffer.from = function (value, encodingOrOffset, length) {\r\n    return from(value, encodingOrOffset, length)\r\n  }\r\n\r\n  // Note: Change prototype *after* Buffer.from is defined to workaround Chrome bug:\r\n  // https://github.com/feross/buffer/pull/148\r\n  Buffer.prototype.__proto__ = Uint8Array.prototype\r\n  Buffer.__proto__ = Uint8Array\r\n\r\n  function assertSize (size) {\r\n    if (typeof size !== 'number') {\r\n      throw new TypeError('\"size\" argument must be of type number')\r\n    } else if (size < 0) {\r\n      throw new RangeError('\"size\" argument must not be negative')\r\n    }\r\n  }\r\n\r\n  function alloc (size, fill, encoding) {\r\n    assertSize(size)\r\n    if (size <= 0) {\r\n      return createBuffer(size)\r\n    }\r\n    if (fill !== undefined) {\r\n      // Only pay attention to encoding if it's a string. This\r\n      // prevents accidentally sending in a number that would\r\n      // be interpretted as a start offset.\r\n      return typeof encoding === 'string'\r\n        ? createBuffer(size).fill(fill, encoding)\r\n        : createBuffer(size).fill(fill)\r\n    }\r\n    return createBuffer(size)\r\n  }\r\n\r\n  /**\r\n   * Creates a new filled Buffer instance.\r\n   * alloc(size[, fill[, encoding]])\r\n   **/\r\n  Buffer.alloc = function (size, fill, encoding) {\r\n    return alloc(size, fill, encoding)\r\n  }\r\n\r\n  function allocUnsafe (size) {\r\n    assertSize(size)\r\n    return createBuffer(size < 0 ? 0 : checked(size) | 0)\r\n  }\r\n\r\n  /**\r\n   * Equivalent to Buffer(num), by default creates a non-zero-filled Buffer instance.\r\n   * */\r\n  Buffer.allocUnsafe = function (size) {\r\n    return allocUnsafe(size)\r\n  }\r\n  /**\r\n   * Equivalent to SlowBuffer(num), by default creates a non-zero-filled Buffer instance.\r\n   */\r\n  Buffer.allocUnsafeSlow = function (size) {\r\n    return allocUnsafe(size)\r\n  }\r\n\r\n  function fromString (string, encoding) {\r\n    if (typeof encoding !== 'string' || encoding === '') {\r\n      encoding = 'utf8'\r\n    }\r\n\r\n    if (!Buffer.isEncoding(encoding)) {\r\n      throw new TypeError('Unknown encoding: ' + encoding)\r\n    }\r\n\r\n    var length = byteLength(string, encoding) | 0\r\n    var buf = createBuffer(length)\r\n\r\n    var actual = buf.write(string, encoding)\r\n\r\n    if (actual !== length) {\r\n      // Writing a hex string, for example, that contains invalid characters will\r\n      // cause everything after the first invalid character to be ignored. (e.g.\r\n      // 'abxxcd' will be treated as 'ab')\r\n      buf = buf.slice(0, actual)\r\n    }\r\n\r\n    return buf\r\n  }\r\n\r\n  function fromArrayLike (array) {\r\n    var length = array.length < 0 ? 0 : checked(array.length) | 0\r\n    var buf = createBuffer(length)\r\n    for (var i = 0; i < length; i += 1) {\r\n      buf[i] = array[i] & 255\r\n    }\r\n    return buf\r\n  }\r\n\r\n  function fromArrayBuffer (array, byteOffset, length) {\r\n    if (byteOffset < 0 || array.byteLength < byteOffset) {\r\n      throw new RangeError('\"offset\" is outside of buffer bounds')\r\n    }\r\n\r\n    if (array.byteLength < byteOffset + (length || 0)) {\r\n      throw new RangeError('\"length\" is outside of buffer bounds')\r\n    }\r\n\r\n    var buf\r\n    if (byteOffset === undefined && length === undefined) {\r\n      buf = new Uint8Array(array)\r\n    } else if (length === undefined) {\r\n      buf = new Uint8Array(array, byteOffset)\r\n    } else {\r\n      buf = new Uint8Array(array, byteOffset, length)\r\n    }\r\n\r\n    // Return an augmented `Uint8Array` instance\r\n    buf.__proto__ = Buffer.prototype\r\n    return buf\r\n  }\r\n\r\n  function fromObject (obj) {\r\n    if (Buffer.isBuffer(obj)) {\r\n      var len = checked(obj.length) | 0\r\n      var buf = createBuffer(len)\r\n\r\n      if (buf.length === 0) {\r\n        return buf\r\n      }\r\n\r\n      obj.copy(buf, 0, 0, len)\r\n      return buf\r\n    }\r\n\r\n    if (obj) {\r\n      if (ArrayBuffer.isView(obj) || 'length' in obj) {\r\n        if (typeof obj.length !== 'number' || numberIsNaN(obj.length)) {\r\n          return createBuffer(0)\r\n        }\r\n        return fromArrayLike(obj)\r\n      }\r\n\r\n      if (obj.type === 'Buffer' && Array.isArray(obj.data)) {\r\n        return fromArrayLike(obj.data)\r\n      }\r\n    }\r\n\r\n    throw new TypeError('The first argument must be one of type string, Buffer, ArrayBuffer, Array, or Array-like Object.')\r\n  }\r\n\r\n  function checked (length) {\r\n    // Note: cannot use `length < K_MAX_LENGTH` here because that fails when\r\n    // length is NaN (which is otherwise coerced to zero.)\r\n    if (length >= K_MAX_LENGTH) {\r\n      throw new RangeError('Attempt to allocate Buffer larger than maximum ' +\r\n                           'size: 0x' + K_MAX_LENGTH.toString(16) + ' bytes')\r\n    }\r\n    return length | 0\r\n  }\r\n\r\n  function SlowBuffer (length) {\r\n    if (+length != length) { // eslint-disable-line eqeqeq\r\n      length = 0\r\n    }\r\n    return Buffer.alloc(+length)\r\n  }\r\n\r\n  Buffer.isBuffer = function isBuffer (b) {\r\n    return b != null && b._isBuffer === true\r\n  }\r\n\r\n  Buffer.compare = function compare (a, b) {\r\n    if (!Buffer.isBuffer(a) || !Buffer.isBuffer(b)) {\r\n      throw new TypeError('Arguments must be Buffers')\r\n    }\r\n\r\n    if (a === b) return 0\r\n\r\n    var x = a.length\r\n    var y = b.length\r\n\r\n    for (var i = 0, len = Math.min(x, y); i < len; ++i) {\r\n      if (a[i] !== b[i]) {\r\n        x = a[i]\r\n        y = b[i]\r\n        break\r\n      }\r\n    }\r\n\r\n    if (x < y) return -1\r\n    if (y < x) return 1\r\n    return 0\r\n  }\r\n\r\n  Buffer.isEncoding = function isEncoding (encoding) {\r\n    switch (String(encoding).toLowerCase()) {\r\n      case 'hex':\r\n      case 'utf8':\r\n      case 'utf-8':\r\n      case 'ascii':\r\n      case 'latin1':\r\n      case 'binary':\r\n      case 'base64':\r\n      case 'ucs2':\r\n      case 'ucs-2':\r\n      case 'utf16le':\r\n      case 'utf-16le':\r\n        return true\r\n      default:\r\n        return false\r\n    }\r\n  }\r\n\r\n  Buffer.concat = function concat (list, length) {\r\n    if (!Array.isArray(list)) {\r\n      throw new TypeError('\"list\" argument must be an Array of Buffers')\r\n    }\r\n\r\n    if (list.length === 0) {\r\n      return Buffer.alloc(0)\r\n    }\r\n\r\n    var i\r\n    if (length === undefined) {\r\n      length = 0\r\n      for (i = 0; i < list.length; ++i) {\r\n        length += list[i].length\r\n      }\r\n    }\r\n\r\n    var buffer = Buffer.allocUnsafe(length)\r\n    var pos = 0\r\n    for (i = 0; i < list.length; ++i) {\r\n      var buf = list[i]\r\n      if (ArrayBuffer.isView(buf)) {\r\n        buf = Buffer.from(buf)\r\n      }\r\n      if (!Buffer.isBuffer(buf)) {\r\n        throw new TypeError('\"list\" argument must be an Array of Buffers')\r\n      }\r\n      buf.copy(buffer, pos)\r\n      pos += buf.length\r\n    }\r\n    return buffer\r\n  }\r\n\r\n  function byteLength (string, encoding) {\r\n    if (Buffer.isBuffer(string)) {\r\n      return string.length\r\n    }\r\n    if (ArrayBuffer.isView(string) || isArrayBuffer(string)) {\r\n      return string.byteLength\r\n    }\r\n    if (typeof string !== 'string') {\r\n      string = '' + string\r\n    }\r\n\r\n    var len = string.length\r\n    if (len === 0) return 0\r\n\r\n    // Use a for loop to avoid recursion\r\n    var loweredCase = false\r\n    for (;;) {\r\n      switch (encoding) {\r\n        case 'ascii':\r\n        case 'latin1':\r\n        case 'binary':\r\n          return len\r\n        case 'utf8':\r\n        case 'utf-8':\r\n        case undefined:\r\n          return utf8ToBytes(string).length\r\n        case 'ucs2':\r\n        case 'ucs-2':\r\n        case 'utf16le':\r\n        case 'utf-16le':\r\n          return len * 2\r\n        case 'hex':\r\n          return len >>> 1\r\n        case 'base64':\r\n          return base64ToBytes(string).length\r\n        default:\r\n          if (loweredCase) return utf8ToBytes(string).length // assume utf8\r\n          encoding = ('' + encoding).toLowerCase()\r\n          loweredCase = true\r\n      }\r\n    }\r\n  }\r\n  Buffer.byteLength = byteLength\r\n\r\n  function slowToString (encoding, start, end) {\r\n    var loweredCase = false\r\n\r\n    // No need to verify that \"this.length <= MAX_UINT32\" since it's a read-only\r\n    // property of a typed array.\r\n\r\n    // This behaves neither like String nor Uint8Array in that we set start/end\r\n    // to their upper/lower bounds if the value passed is out of range.\r\n    // undefined is handled specially as per ECMA-262 6th Edition,\r\n    // Section 13.3.3.7 Runtime Semantics: KeyedBindingInitialization.\r\n    if (start === undefined || start < 0) {\r\n      start = 0\r\n    }\r\n    // Return early if start > this.length. Done here to prevent potential uint32\r\n    // coercion fail below.\r\n    if (start > this.length) {\r\n      return ''\r\n    }\r\n\r\n    if (end === undefined || end > this.length) {\r\n      end = this.length\r\n    }\r\n\r\n    if (end <= 0) {\r\n      return ''\r\n    }\r\n\r\n    // Force coersion to uint32. This will also coerce falsey/NaN values to 0.\r\n    end >>>= 0\r\n    start >>>= 0\r\n\r\n    if (end <= start) {\r\n      return ''\r\n    }\r\n\r\n    if (!encoding) encoding = 'utf8'\r\n\r\n    while (true) {\r\n      switch (encoding) {\r\n        case 'hex':\r\n          return hexSlice(this, start, end)\r\n\r\n        case 'utf8':\r\n        case 'utf-8':\r\n          return utf8Slice(this, start, end)\r\n\r\n        case 'ascii':\r\n          return asciiSlice(this, start, end)\r\n\r\n        case 'latin1':\r\n        case 'binary':\r\n          return latin1Slice(this, start, end)\r\n\r\n        case 'base64':\r\n          return base64Slice(this, start, end)\r\n\r\n        case 'ucs2':\r\n        case 'ucs-2':\r\n        case 'utf16le':\r\n        case 'utf-16le':\r\n          return utf16leSlice(this, start, end)\r\n\r\n        default:\r\n          if (loweredCase) throw new TypeError('Unknown encoding: ' + encoding)\r\n          encoding = (encoding + '').toLowerCase()\r\n          loweredCase = true\r\n      }\r\n    }\r\n  }\r\n\r\n  // This property is used by `Buffer.isBuffer` (and the `is-buffer` npm package)\r\n  // to detect a Buffer instance. It's not possible to use `instanceof Buffer`\r\n  // reliably in a browserify context because there could be multiple different\r\n  // copies of the 'buffer' package in use. This method works even for Buffer\r\n  // instances that were created from another copy of the `buffer` package.\r\n  // See: https://github.com/feross/buffer/issues/154\r\n  Buffer.prototype._isBuffer = true\r\n\r\n  function swap (b, n, m) {\r\n    var i = b[n]\r\n    b[n] = b[m]\r\n    b[m] = i\r\n  }\r\n\r\n  Buffer.prototype.swap16 = function swap16 () {\r\n    var len = this.length\r\n    if (len % 2 !== 0) {\r\n      throw new RangeError('Buffer size must be a multiple of 16-bits')\r\n    }\r\n    for (var i = 0; i < len; i += 2) {\r\n      swap(this, i, i + 1)\r\n    }\r\n    return this\r\n  }\r\n\r\n  Buffer.prototype.swap32 = function swap32 () {\r\n    var len = this.length\r\n    if (len % 4 !== 0) {\r\n      throw new RangeError('Buffer size must be a multiple of 32-bits')\r\n    }\r\n    for (var i = 0; i < len; i += 4) {\r\n      swap(this, i, i + 3)\r\n      swap(this, i + 1, i + 2)\r\n    }\r\n    return this\r\n  }\r\n\r\n  Buffer.prototype.swap64 = function swap64 () {\r\n    var len = this.length\r\n    if (len % 8 !== 0) {\r\n      throw new RangeError('Buffer size must be a multiple of 64-bits')\r\n    }\r\n    for (var i = 0; i < len; i += 8) {\r\n      swap(this, i, i + 7)\r\n      swap(this, i + 1, i + 6)\r\n      swap(this, i + 2, i + 5)\r\n      swap(this, i + 3, i + 4)\r\n    }\r\n    return this\r\n  }\r\n\r\n  Buffer.prototype.toString = function toString () {\r\n    var length = this.length\r\n    if (length === 0) return ''\r\n    if (arguments.length === 0) return utf8Slice(this, 0, length)\r\n    return slowToString.apply(this, arguments)\r\n  }\r\n\r\n  Buffer.prototype.toLocaleString = Buffer.prototype.toString\r\n\r\n  Buffer.prototype.equals = function equals (b) {\r\n    if (!Buffer.isBuffer(b)) throw new TypeError('Argument must be a Buffer')\r\n    if (this === b) return true\r\n    return Buffer.compare(this, b) === 0\r\n  }\r\n\r\n  Buffer.prototype.inspect = function inspect () {\r\n    var str = ''\r\n    var max = exports.INSPECT_MAX_BYTES\r\n    if (this.length > 0) {\r\n      str = this.toString('hex', 0, max).match(/.{2}/g).join(' ')\r\n      if (this.length > max) str += ' ... '\r\n    }\r\n    return '<Buffer ' + str + '>'\r\n  }\r\n\r\n  Buffer.prototype.compare = function compare (target, start, end, thisStart, thisEnd) {\r\n    if (!Buffer.isBuffer(target)) {\r\n      throw new TypeError('Argument must be a Buffer')\r\n    }\r\n\r\n    if (start === undefined) {\r\n      start = 0\r\n    }\r\n    if (end === undefined) {\r\n      end = target ? target.length : 0\r\n    }\r\n    if (thisStart === undefined) {\r\n      thisStart = 0\r\n    }\r\n    if (thisEnd === undefined) {\r\n      thisEnd = this.length\r\n    }\r\n\r\n    if (start < 0 || end > target.length || thisStart < 0 || thisEnd > this.length) {\r\n      throw new RangeError('out of range index')\r\n    }\r\n\r\n    if (thisStart >= thisEnd && start >= end) {\r\n      return 0\r\n    }\r\n    if (thisStart >= thisEnd) {\r\n      return -1\r\n    }\r\n    if (start >= end) {\r\n      return 1\r\n    }\r\n\r\n    start >>>= 0\r\n    end >>>= 0\r\n    thisStart >>>= 0\r\n    thisEnd >>>= 0\r\n\r\n    if (this === target) return 0\r\n\r\n    var x = thisEnd - thisStart\r\n    var y = end - start\r\n    var len = Math.min(x, y)\r\n\r\n    var thisCopy = this.slice(thisStart, thisEnd)\r\n    var targetCopy = target.slice(start, end)\r\n\r\n    for (var i = 0; i < len; ++i) {\r\n      if (thisCopy[i] !== targetCopy[i]) {\r\n        x = thisCopy[i]\r\n        y = targetCopy[i]\r\n        break\r\n      }\r\n    }\r\n\r\n    if (x < y) return -1\r\n    if (y < x) return 1\r\n    return 0\r\n  }\r\n\r\n  // Finds either the first index of `val` in `buffer` at offset >= `byteOffset`,\r\n  // OR the last index of `val` in `buffer` at offset <= `byteOffset`.\r\n  //\r\n  // Arguments:\r\n  // - buffer - a Buffer to search\r\n  // - val - a string, Buffer, or number\r\n  // - byteOffset - an index into `buffer`; will be clamped to an int32\r\n  // - encoding - an optional encoding, relevant is val is a string\r\n  // - dir - true for indexOf, false for lastIndexOf\r\n  function bidirectionalIndexOf (buffer, val, byteOffset, encoding, dir) {\r\n    // Empty buffer means no match\r\n    if (buffer.length === 0) return -1\r\n\r\n    // Normalize byteOffset\r\n    if (typeof byteOffset === 'string') {\r\n      encoding = byteOffset\r\n      byteOffset = 0\r\n    } else if (byteOffset > 0x7fffffff) {\r\n      byteOffset = 0x7fffffff\r\n    } else if (byteOffset < -0x80000000) {\r\n      byteOffset = -0x80000000\r\n    }\r\n    byteOffset = +byteOffset  // Coerce to Number.\r\n    if (numberIsNaN(byteOffset)) {\r\n      // byteOffset: it it's undefined, null, NaN, \"foo\", etc, search whole buffer\r\n      byteOffset = dir ? 0 : (buffer.length - 1)\r\n    }\r\n\r\n    // Normalize byteOffset: negative offsets start from the end of the buffer\r\n    if (byteOffset < 0) byteOffset = buffer.length + byteOffset\r\n    if (byteOffset >= buffer.length) {\r\n      if (dir) return -1\r\n      else byteOffset = buffer.length - 1\r\n    } else if (byteOffset < 0) {\r\n      if (dir) byteOffset = 0\r\n      else return -1\r\n    }\r\n\r\n    // Normalize val\r\n    if (typeof val === 'string') {\r\n      val = Buffer.from(val, encoding)\r\n    }\r\n\r\n    // Finally, search either indexOf (if dir is true) or lastIndexOf\r\n    if (Buffer.isBuffer(val)) {\r\n      // Special case: looking for empty string/buffer always fails\r\n      if (val.length === 0) {\r\n        return -1\r\n      }\r\n      return arrayIndexOf(buffer, val, byteOffset, encoding, dir)\r\n    } else if (typeof val === 'number') {\r\n      val = val & 0xFF // Search for a byte value [0-255]\r\n      if (typeof Uint8Array.prototype.indexOf === 'function') {\r\n        if (dir) {\r\n          return Uint8Array.prototype.indexOf.call(buffer, val, byteOffset)\r\n        } else {\r\n          return Uint8Array.prototype.lastIndexOf.call(buffer, val, byteOffset)\r\n        }\r\n      }\r\n      return arrayIndexOf(buffer, [ val ], byteOffset, encoding, dir)\r\n    }\r\n\r\n    throw new TypeError('val must be string, number or Buffer')\r\n  }\r\n\r\n  function arrayIndexOf (arr, val, byteOffset, encoding, dir) {\r\n    var indexSize = 1\r\n    var arrLength = arr.length\r\n    var valLength = val.length\r\n\r\n    if (encoding !== undefined) {\r\n      encoding = String(encoding).toLowerCase()\r\n      if (encoding === 'ucs2' || encoding === 'ucs-2' ||\r\n          encoding === 'utf16le' || encoding === 'utf-16le') {\r\n        if (arr.length < 2 || val.length < 2) {\r\n          return -1\r\n        }\r\n        indexSize = 2\r\n        arrLength /= 2\r\n        valLength /= 2\r\n        byteOffset /= 2\r\n      }\r\n    }\r\n\r\n    function read (buf, i) {\r\n      if (indexSize === 1) {\r\n        return buf[i]\r\n      } else {\r\n        return buf.readUInt16BE(i * indexSize)\r\n      }\r\n    }\r\n\r\n    var i\r\n    if (dir) {\r\n      var foundIndex = -1\r\n      for (i = byteOffset; i < arrLength; i++) {\r\n        if (read(arr, i) === read(val, foundIndex === -1 ? 0 : i - foundIndex)) {\r\n          if (foundIndex === -1) foundIndex = i\r\n          if (i - foundIndex + 1 === valLength) return foundIndex * indexSize\r\n        } else {\r\n          if (foundIndex !== -1) i -= i - foundIndex\r\n          foundIndex = -1\r\n        }\r\n      }\r\n    } else {\r\n      if (byteOffset + valLength > arrLength) byteOffset = arrLength - valLength\r\n      for (i = byteOffset; i >= 0; i--) {\r\n        var found = true\r\n        for (var j = 0; j < valLength; j++) {\r\n          if (read(arr, i + j) !== read(val, j)) {\r\n            found = false\r\n            break\r\n          }\r\n        }\r\n        if (found) return i\r\n      }\r\n    }\r\n\r\n    return -1\r\n  }\r\n\r\n  Buffer.prototype.includes = function includes (val, byteOffset, encoding) {\r\n    return this.indexOf(val, byteOffset, encoding) !== -1\r\n  }\r\n\r\n  Buffer.prototype.indexOf = function indexOf (val, byteOffset, encoding) {\r\n    return bidirectionalIndexOf(this, val, byteOffset, encoding, true)\r\n  }\r\n\r\n  Buffer.prototype.lastIndexOf = function lastIndexOf (val, byteOffset, encoding) {\r\n    return bidirectionalIndexOf(this, val, byteOffset, encoding, false)\r\n  }\r\n\r\n  function hexWrite (buf, string, offset, length) {\r\n    offset = Number(offset) || 0\r\n    var remaining = buf.length - offset\r\n    if (!length) {\r\n      length = remaining\r\n    } else {\r\n      length = Number(length)\r\n      if (length > remaining) {\r\n        length = remaining\r\n      }\r\n    }\r\n\r\n    var strLen = string.length\r\n\r\n    if (length > strLen / 2) {\r\n      length = strLen / 2\r\n    }\r\n    for (var i = 0; i < length; ++i) {\r\n      var parsed = parseInt(string.substr(i * 2, 2), 16)\r\n      if (numberIsNaN(parsed)) return i\r\n      buf[offset + i] = parsed\r\n    }\r\n    return i\r\n  }\r\n\r\n  function utf8Write (buf, string, offset, length) {\r\n    return blitBuffer(utf8ToBytes(string, buf.length - offset), buf, offset, length)\r\n  }\r\n\r\n  function asciiWrite (buf, string, offset, length) {\r\n    return blitBuffer(asciiToBytes(string), buf, offset, length)\r\n  }\r\n\r\n  function latin1Write (buf, string, offset, length) {\r\n    return asciiWrite(buf, string, offset, length)\r\n  }\r\n\r\n  function base64Write (buf, string, offset, length) {\r\n    return blitBuffer(base64ToBytes(string), buf, offset, length)\r\n  }\r\n\r\n  function ucs2Write (buf, string, offset, length) {\r\n    return blitBuffer(utf16leToBytes(string, buf.length - offset), buf, offset, length)\r\n  }\r\n\r\n  Buffer.prototype.write = function write (string, offset, length, encoding) {\r\n    // Buffer#write(string)\r\n    if (offset === undefined) {\r\n      encoding = 'utf8'\r\n      length = this.length\r\n      offset = 0\r\n    // Buffer#write(string, encoding)\r\n    } else if (length === undefined && typeof offset === 'string') {\r\n      encoding = offset\r\n      length = this.length\r\n      offset = 0\r\n    // Buffer#write(string, offset[, length][, encoding])\r\n    } else if (isFinite(offset)) {\r\n      offset = offset >>> 0\r\n      if (isFinite(length)) {\r\n        length = length >>> 0\r\n        if (encoding === undefined) encoding = 'utf8'\r\n      } else {\r\n        encoding = length\r\n        length = undefined\r\n      }\r\n    } else {\r\n      throw new Error(\r\n        'Buffer.write(string, encoding, offset[, length]) is no longer supported'\r\n      )\r\n    }\r\n\r\n    var remaining = this.length - offset\r\n    if (length === undefined || length > remaining) length = remaining\r\n\r\n    if ((string.length > 0 && (length < 0 || offset < 0)) || offset > this.length) {\r\n      throw new RangeError('Attempt to write outside buffer bounds')\r\n    }\r\n\r\n    if (!encoding) encoding = 'utf8'\r\n\r\n    var loweredCase = false\r\n    for (;;) {\r\n      switch (encoding) {\r\n        case 'hex':\r\n          return hexWrite(this, string, offset, length)\r\n\r\n        case 'utf8':\r\n        case 'utf-8':\r\n          return utf8Write(this, string, offset, length)\r\n\r\n        case 'ascii':\r\n          return asciiWrite(this, string, offset, length)\r\n\r\n        case 'latin1':\r\n        case 'binary':\r\n          return latin1Write(this, string, offset, length)\r\n\r\n        case 'base64':\r\n          // Warning: maxLength not taken into account in base64Write\r\n          return base64Write(this, string, offset, length)\r\n\r\n        case 'ucs2':\r\n        case 'ucs-2':\r\n        case 'utf16le':\r\n        case 'utf-16le':\r\n          return ucs2Write(this, string, offset, length)\r\n\r\n        default:\r\n          if (loweredCase) throw new TypeError('Unknown encoding: ' + encoding)\r\n          encoding = ('' + encoding).toLowerCase()\r\n          loweredCase = true\r\n      }\r\n    }\r\n  }\r\n\r\n  Buffer.prototype.toJSON = function toJSON () {\r\n    return {\r\n      type: 'Buffer',\r\n      data: Array.prototype.slice.call(this._arr || this, 0)\r\n    }\r\n  }\r\n\r\n  function base64Slice (buf, start, end) {\r\n    if (start === 0 && end === buf.length) {\r\n      return base64.fromByteArray(buf)\r\n    } else {\r\n      return base64.fromByteArray(buf.slice(start, end))\r\n    }\r\n  }\r\n\r\n  function utf8Slice (buf, start, end) {\r\n    end = Math.min(buf.length, end)\r\n    var res = []\r\n\r\n    var i = start\r\n    while (i < end) {\r\n      var firstByte = buf[i]\r\n      var codePoint = null\r\n      var bytesPerSequence = (firstByte > 0xEF) ? 4\r\n        : (firstByte > 0xDF) ? 3\r\n        : (firstByte > 0xBF) ? 2\r\n        : 1\r\n\r\n      if (i + bytesPerSequence <= end) {\r\n        var secondByte, thirdByte, fourthByte, tempCodePoint\r\n\r\n        switch (bytesPerSequence) {\r\n          case 1:\r\n            if (firstByte < 0x80) {\r\n              codePoint = firstByte\r\n            }\r\n            break\r\n          case 2:\r\n            secondByte = buf[i + 1]\r\n            if ((secondByte & 0xC0) === 0x80) {\r\n              tempCodePoint = (firstByte & 0x1F) << 0x6 | (secondByte & 0x3F)\r\n              if (tempCodePoint > 0x7F) {\r\n                codePoint = tempCodePoint\r\n              }\r\n            }\r\n            break\r\n          case 3:\r\n            secondByte = buf[i + 1]\r\n            thirdByte = buf[i + 2]\r\n            if ((secondByte & 0xC0) === 0x80 && (thirdByte & 0xC0) === 0x80) {\r\n              tempCodePoint = (firstByte & 0xF) << 0xC | (secondByte & 0x3F) << 0x6 | (thirdByte & 0x3F)\r\n              if (tempCodePoint > 0x7FF && (tempCodePoint < 0xD800 || tempCodePoint > 0xDFFF)) {\r\n                codePoint = tempCodePoint\r\n              }\r\n            }\r\n            break\r\n          case 4:\r\n            secondByte = buf[i + 1]\r\n            thirdByte = buf[i + 2]\r\n            fourthByte = buf[i + 3]\r\n            if ((secondByte & 0xC0) === 0x80 && (thirdByte & 0xC0) === 0x80 && (fourthByte & 0xC0) === 0x80) {\r\n              tempCodePoint = (firstByte & 0xF) << 0x12 | (secondByte & 0x3F) << 0xC | (thirdByte & 0x3F) << 0x6 | (fourthByte & 0x3F)\r\n              if (tempCodePoint > 0xFFFF && tempCodePoint < 0x110000) {\r\n                codePoint = tempCodePoint\r\n              }\r\n            }\r\n        }\r\n      }\r\n\r\n      if (codePoint === null) {\r\n        // we did not generate a valid codePoint so insert a\r\n        // replacement char (U+FFFD) and advance only 1 byte\r\n        codePoint = 0xFFFD\r\n        bytesPerSequence = 1\r\n      } else if (codePoint > 0xFFFF) {\r\n        // encode to utf16 (surrogate pair dance)\r\n        codePoint -= 0x10000\r\n        res.push(codePoint >>> 10 & 0x3FF | 0xD800)\r\n        codePoint = 0xDC00 | codePoint & 0x3FF\r\n      }\r\n\r\n      res.push(codePoint)\r\n      i += bytesPerSequence\r\n    }\r\n\r\n    return decodeCodePointsArray(res)\r\n  }\r\n\r\n  // Based on http://stackoverflow.com/a/22747272/680742, the browser with\r\n  // the lowest limit is Chrome, with 0x10000 args.\r\n  // We go 1 magnitude less, for safety\r\n  var MAX_ARGUMENTS_LENGTH = 0x1000\r\n\r\n  function decodeCodePointsArray (codePoints) {\r\n    var len = codePoints.length\r\n    if (len <= MAX_ARGUMENTS_LENGTH) {\r\n      return String.fromCharCode.apply(String, codePoints) // avoid extra slice()\r\n    }\r\n\r\n    // Decode in chunks to avoid \"call stack size exceeded\".\r\n    var res = ''\r\n    var i = 0\r\n    while (i < len) {\r\n      res += String.fromCharCode.apply(\r\n        String,\r\n        codePoints.slice(i, i += MAX_ARGUMENTS_LENGTH)\r\n      )\r\n    }\r\n    return res\r\n  }\r\n\r\n  function asciiSlice (buf, start, end) {\r\n    var ret = ''\r\n    end = Math.min(buf.length, end)\r\n\r\n    for (var i = start; i < end; ++i) {\r\n      ret += String.fromCharCode(buf[i] & 0x7F)\r\n    }\r\n    return ret\r\n  }\r\n\r\n  function latin1Slice (buf, start, end) {\r\n    var ret = ''\r\n    end = Math.min(buf.length, end)\r\n\r\n    for (var i = start; i < end; ++i) {\r\n      ret += String.fromCharCode(buf[i])\r\n    }\r\n    return ret\r\n  }\r\n\r\n  function hexSlice (buf, start, end) {\r\n    var len = buf.length\r\n\r\n    if (!start || start < 0) start = 0\r\n    if (!end || end < 0 || end > len) end = len\r\n\r\n    var out = ''\r\n    for (var i = start; i < end; ++i) {\r\n      out += toHex(buf[i])\r\n    }\r\n    return out\r\n  }\r\n\r\n  function utf16leSlice (buf, start, end) {\r\n    var bytes = buf.slice(start, end)\r\n    var res = ''\r\n    for (var i = 0; i < bytes.length; i += 2) {\r\n      res += String.fromCharCode(bytes[i] + (bytes[i + 1] * 256))\r\n    }\r\n    return res\r\n  }\r\n\r\n  Buffer.prototype.slice = function slice (start, end) {\r\n    var len = this.length\r\n    start = ~~start\r\n    end = end === undefined ? len : ~~end\r\n\r\n    if (start < 0) {\r\n      start += len\r\n      if (start < 0) start = 0\r\n    } else if (start > len) {\r\n      start = len\r\n    }\r\n\r\n    if (end < 0) {\r\n      end += len\r\n      if (end < 0) end = 0\r\n    } else if (end > len) {\r\n      end = len\r\n    }\r\n\r\n    if (end < start) end = start\r\n\r\n    var newBuf = this.subarray(start, end)\r\n    // Return an augmented `Uint8Array` instance\r\n    newBuf.__proto__ = Buffer.prototype\r\n    return newBuf\r\n  }\r\n\r\n  /*\r\n   * Need to make sure that buffer isn't trying to write out of bounds.\r\n   */\r\n  function checkOffset (offset, ext, length) {\r\n    if ((offset % 1) !== 0 || offset < 0) throw new RangeError('offset is not uint')\r\n    if (offset + ext > length) throw new RangeError('Trying to access beyond buffer length')\r\n  }\r\n\r\n  Buffer.prototype.readUIntLE = function readUIntLE (offset, byteLength, noAssert) {\r\n    offset = offset >>> 0\r\n    byteLength = byteLength >>> 0\r\n    if (!noAssert) checkOffset(offset, byteLength, this.length)\r\n\r\n    var val = this[offset]\r\n    var mul = 1\r\n    var i = 0\r\n    while (++i < byteLength && (mul *= 0x100)) {\r\n      val += this[offset + i] * mul\r\n    }\r\n\r\n    return val\r\n  }\r\n\r\n  Buffer.prototype.readUIntBE = function readUIntBE (offset, byteLength, noAssert) {\r\n    offset = offset >>> 0\r\n    byteLength = byteLength >>> 0\r\n    if (!noAssert) {\r\n      checkOffset(offset, byteLength, this.length)\r\n    }\r\n\r\n    var val = this[offset + --byteLength]\r\n    var mul = 1\r\n    while (byteLength > 0 && (mul *= 0x100)) {\r\n      val += this[offset + --byteLength] * mul\r\n    }\r\n\r\n    return val\r\n  }\r\n\r\n  Buffer.prototype.readUInt8 = function readUInt8 (offset, noAssert) {\r\n    offset = offset >>> 0\r\n    if (!noAssert) checkOffset(offset, 1, this.length)\r\n    return this[offset]\r\n  }\r\n\r\n  Buffer.prototype.readUInt16LE = function readUInt16LE (offset, noAssert) {\r\n    offset = offset >>> 0\r\n    if (!noAssert) checkOffset(offset, 2, this.length)\r\n    return this[offset] | (this[offset + 1] << 8)\r\n  }\r\n\r\n  Buffer.prototype.readUInt16BE = function readUInt16BE (offset, noAssert) {\r\n    offset = offset >>> 0\r\n    if (!noAssert) checkOffset(offset, 2, this.length)\r\n    return (this[offset] << 8) | this[offset + 1]\r\n  }\r\n\r\n  Buffer.prototype.readUInt32LE = function readUInt32LE (offset, noAssert) {\r\n    offset = offset >>> 0\r\n    if (!noAssert) checkOffset(offset, 4, this.length)\r\n\r\n    return ((this[offset]) |\r\n        (this[offset + 1] << 8) |\r\n        (this[offset + 2] << 16)) +\r\n        (this[offset + 3] * 0x1000000)\r\n  }\r\n\r\n  Buffer.prototype.readUInt32BE = function readUInt32BE (offset, noAssert) {\r\n    offset = offset >>> 0\r\n    if (!noAssert) checkOffset(offset, 4, this.length)\r\n\r\n    return (this[offset] * 0x1000000) +\r\n      ((this[offset + 1] << 16) |\r\n      (this[offset + 2] << 8) |\r\n      this[offset + 3])\r\n  }\r\n\r\n  Buffer.prototype.readIntLE = function readIntLE (offset, byteLength, noAssert) {\r\n    offset = offset >>> 0\r\n    byteLength = byteLength >>> 0\r\n    if (!noAssert) checkOffset(offset, byteLength, this.length)\r\n\r\n    var val = this[offset]\r\n    var mul = 1\r\n    var i = 0\r\n    while (++i < byteLength && (mul *= 0x100)) {\r\n      val += this[offset + i] * mul\r\n    }\r\n    mul *= 0x80\r\n\r\n    if (val >= mul) val -= Math.pow(2, 8 * byteLength)\r\n\r\n    return val\r\n  }\r\n\r\n  Buffer.prototype.readIntBE = function readIntBE (offset, byteLength, noAssert) {\r\n    offset = offset >>> 0\r\n    byteLength = byteLength >>> 0\r\n    if (!noAssert) checkOffset(offset, byteLength, this.length)\r\n\r\n    var i = byteLength\r\n    var mul = 1\r\n    var val = this[offset + --i]\r\n    while (i > 0 && (mul *= 0x100)) {\r\n      val += this[offset + --i] * mul\r\n    }\r\n    mul *= 0x80\r\n\r\n    if (val >= mul) val -= Math.pow(2, 8 * byteLength)\r\n\r\n    return val\r\n  }\r\n\r\n  Buffer.prototype.readInt8 = function readInt8 (offset, noAssert) {\r\n    offset = offset >>> 0\r\n    if (!noAssert) checkOffset(offset, 1, this.length)\r\n    if (!(this[offset] & 0x80)) return (this[offset])\r\n    return ((0xff - this[offset] + 1) * -1)\r\n  }\r\n\r\n  Buffer.prototype.readInt16LE = function readInt16LE (offset, noAssert) {\r\n    offset = offset >>> 0\r\n    if (!noAssert) checkOffset(offset, 2, this.length)\r\n    var val = this[offset] | (this[offset + 1] << 8)\r\n    return (val & 0x8000) ? val | 0xFFFF0000 : val\r\n  }\r\n\r\n  Buffer.prototype.readInt16BE = function readInt16BE (offset, noAssert) {\r\n    offset = offset >>> 0\r\n    if (!noAssert) checkOffset(offset, 2, this.length)\r\n    var val = this[offset + 1] | (this[offset] << 8)\r\n    return (val & 0x8000) ? val | 0xFFFF0000 : val\r\n  }\r\n\r\n  Buffer.prototype.readInt32LE = function readInt32LE (offset, noAssert) {\r\n    offset = offset >>> 0\r\n    if (!noAssert) checkOffset(offset, 4, this.length)\r\n\r\n    return (this[offset]) |\r\n      (this[offset + 1] << 8) |\r\n      (this[offset + 2] << 16) |\r\n      (this[offset + 3] << 24)\r\n  }\r\n\r\n  Buffer.prototype.readInt32BE = function readInt32BE (offset, noAssert) {\r\n    offset = offset >>> 0\r\n    if (!noAssert) checkOffset(offset, 4, this.length)\r\n\r\n    return (this[offset] << 24) |\r\n      (this[offset + 1] << 16) |\r\n      (this[offset + 2] << 8) |\r\n      (this[offset + 3])\r\n  }\r\n\r\n  Buffer.prototype.readFloatLE = function readFloatLE (offset, noAssert) {\r\n    offset = offset >>> 0\r\n    if (!noAssert) checkOffset(offset, 4, this.length)\r\n    return ieee754.read(this, offset, true, 23, 4)\r\n  }\r\n\r\n  Buffer.prototype.readFloatBE = function readFloatBE (offset, noAssert) {\r\n    offset = offset >>> 0\r\n    if (!noAssert) checkOffset(offset, 4, this.length)\r\n    return ieee754.read(this, offset, false, 23, 4)\r\n  }\r\n\r\n  Buffer.prototype.readDoubleLE = function readDoubleLE (offset, noAssert) {\r\n    offset = offset >>> 0\r\n    if (!noAssert) checkOffset(offset, 8, this.length)\r\n    return ieee754.read(this, offset, true, 52, 8)\r\n  }\r\n\r\n  Buffer.prototype.readDoubleBE = function readDoubleBE (offset, noAssert) {\r\n    offset = offset >>> 0\r\n    if (!noAssert) checkOffset(offset, 8, this.length)\r\n    return ieee754.read(this, offset, false, 52, 8)\r\n  }\r\n\r\n  function checkInt (buf, value, offset, ext, max, min) {\r\n    if (!Buffer.isBuffer(buf)) throw new TypeError('\"buffer\" argument must be a Buffer instance')\r\n    if (value > max || value < min) throw new RangeError('\"value\" argument is out of bounds')\r\n    if (offset + ext > buf.length) throw new RangeError('Index out of range')\r\n  }\r\n\r\n  Buffer.prototype.writeUIntLE = function writeUIntLE (value, offset, byteLength, noAssert) {\r\n    value = +value\r\n    offset = offset >>> 0\r\n    byteLength = byteLength >>> 0\r\n    if (!noAssert) {\r\n      var maxBytes = Math.pow(2, 8 * byteLength) - 1\r\n      checkInt(this, value, offset, byteLength, maxBytes, 0)\r\n    }\r\n\r\n    var mul = 1\r\n    var i = 0\r\n    this[offset] = value & 0xFF\r\n    while (++i < byteLength && (mul *= 0x100)) {\r\n      this[offset + i] = (value / mul) & 0xFF\r\n    }\r\n\r\n    return offset + byteLength\r\n  }\r\n\r\n  Buffer.prototype.writeUIntBE = function writeUIntBE (value, offset, byteLength, noAssert) {\r\n    value = +value\r\n    offset = offset >>> 0\r\n    byteLength = byteLength >>> 0\r\n    if (!noAssert) {\r\n      var maxBytes = Math.pow(2, 8 * byteLength) - 1\r\n      checkInt(this, value, offset, byteLength, maxBytes, 0)\r\n    }\r\n\r\n    var i = byteLength - 1\r\n    var mul = 1\r\n    this[offset + i] = value & 0xFF\r\n    while (--i >= 0 && (mul *= 0x100)) {\r\n      this[offset + i] = (value / mul) & 0xFF\r\n    }\r\n\r\n    return offset + byteLength\r\n  }\r\n\r\n  Buffer.prototype.writeUInt8 = function writeUInt8 (value, offset, noAssert) {\r\n    value = +value\r\n    offset = offset >>> 0\r\n    if (!noAssert) checkInt(this, value, offset, 1, 0xff, 0)\r\n    this[offset] = (value & 0xff)\r\n    return offset + 1\r\n  }\r\n\r\n  Buffer.prototype.writeUInt16LE = function writeUInt16LE (value, offset, noAssert) {\r\n    value = +value\r\n    offset = offset >>> 0\r\n    if (!noAssert) checkInt(this, value, offset, 2, 0xffff, 0)\r\n    this[offset] = (value & 0xff)\r\n    this[offset + 1] = (value >>> 8)\r\n    return offset + 2\r\n  }\r\n\r\n  Buffer.prototype.writeUInt16BE = function writeUInt16BE (value, offset, noAssert) {\r\n    value = +value\r\n    offset = offset >>> 0\r\n    if (!noAssert) checkInt(this, value, offset, 2, 0xffff, 0)\r\n    this[offset] = (value >>> 8)\r\n    this[offset + 1] = (value & 0xff)\r\n    return offset + 2\r\n  }\r\n\r\n  Buffer.prototype.writeUInt32LE = function writeUInt32LE (value, offset, noAssert) {\r\n    value = +value\r\n    offset = offset >>> 0\r\n    if (!noAssert) checkInt(this, value, offset, 4, 0xffffffff, 0)\r\n    this[offset + 3] = (value >>> 24)\r\n    this[offset + 2] = (value >>> 16)\r\n    this[offset + 1] = (value >>> 8)\r\n    this[offset] = (value & 0xff)\r\n    return offset + 4\r\n  }\r\n\r\n  Buffer.prototype.writeUInt32BE = function writeUInt32BE (value, offset, noAssert) {\r\n    value = +value\r\n    offset = offset >>> 0\r\n    if (!noAssert) checkInt(this, value, offset, 4, 0xffffffff, 0)\r\n    this[offset] = (value >>> 24)\r\n    this[offset + 1] = (value >>> 16)\r\n    this[offset + 2] = (value >>> 8)\r\n    this[offset + 3] = (value & 0xff)\r\n    return offset + 4\r\n  }\r\n\r\n  Buffer.prototype.writeIntLE = function writeIntLE (value, offset, byteLength, noAssert) {\r\n    value = +value\r\n    offset = offset >>> 0\r\n    if (!noAssert) {\r\n      var limit = Math.pow(2, (8 * byteLength) - 1)\r\n\r\n      checkInt(this, value, offset, byteLength, limit - 1, -limit)\r\n    }\r\n\r\n    var i = 0\r\n    var mul = 1\r\n    var sub = 0\r\n    this[offset] = value & 0xFF\r\n    while (++i < byteLength && (mul *= 0x100)) {\r\n      if (value < 0 && sub === 0 && this[offset + i - 1] !== 0) {\r\n        sub = 1\r\n      }\r\n      this[offset + i] = ((value / mul) >> 0) - sub & 0xFF\r\n    }\r\n\r\n    return offset + byteLength\r\n  }\r\n\r\n  Buffer.prototype.writeIntBE = function writeIntBE (value, offset, byteLength, noAssert) {\r\n    value = +value\r\n    offset = offset >>> 0\r\n    if (!noAssert) {\r\n      var limit = Math.pow(2, (8 * byteLength) - 1)\r\n\r\n      checkInt(this, value, offset, byteLength, limit - 1, -limit)\r\n    }\r\n\r\n    var i = byteLength - 1\r\n    var mul = 1\r\n    var sub = 0\r\n    this[offset + i] = value & 0xFF\r\n    while (--i >= 0 && (mul *= 0x100)) {\r\n      if (value < 0 && sub === 0 && this[offset + i + 1] !== 0) {\r\n        sub = 1\r\n      }\r\n      this[offset + i] = ((value / mul) >> 0) - sub & 0xFF\r\n    }\r\n\r\n    return offset + byteLength\r\n  }\r\n\r\n  Buffer.prototype.writeInt8 = function writeInt8 (value, offset, noAssert) {\r\n    value = +value\r\n    offset = offset >>> 0\r\n    if (!noAssert) checkInt(this, value, offset, 1, 0x7f, -0x80)\r\n    if (value < 0) value = 0xff + value + 1\r\n    this[offset] = (value & 0xff)\r\n    return offset + 1\r\n  }\r\n\r\n  Buffer.prototype.writeInt16LE = function writeInt16LE (value, offset, noAssert) {\r\n    value = +value\r\n    offset = offset >>> 0\r\n    if (!noAssert) checkInt(this, value, offset, 2, 0x7fff, -0x8000)\r\n    this[offset] = (value & 0xff)\r\n    this[offset + 1] = (value >>> 8)\r\n    return offset + 2\r\n  }\r\n\r\n  Buffer.prototype.writeInt16BE = function writeInt16BE (value, offset, noAssert) {\r\n    value = +value\r\n    offset = offset >>> 0\r\n    if (!noAssert) checkInt(this, value, offset, 2, 0x7fff, -0x8000)\r\n    this[offset] = (value >>> 8)\r\n    this[offset + 1] = (value & 0xff)\r\n    return offset + 2\r\n  }\r\n\r\n  Buffer.prototype.writeInt32LE = function writeInt32LE (value, offset, noAssert) {\r\n    value = +value\r\n    offset = offset >>> 0\r\n    if (!noAssert) checkInt(this, value, offset, 4, 0x7fffffff, -0x80000000)\r\n    this[offset] = (value & 0xff)\r\n    this[offset + 1] = (value >>> 8)\r\n    this[offset + 2] = (value >>> 16)\r\n    this[offset + 3] = (value >>> 24)\r\n    return offset + 4\r\n  }\r\n\r\n  Buffer.prototype.writeInt32BE = function writeInt32BE (value, offset, noAssert) {\r\n    value = +value\r\n    offset = offset >>> 0\r\n    if (!noAssert) checkInt(this, value, offset, 4, 0x7fffffff, -0x80000000)\r\n    if (value < 0) value = 0xffffffff + value + 1\r\n    this[offset] = (value >>> 24)\r\n    this[offset + 1] = (value >>> 16)\r\n    this[offset + 2] = (value >>> 8)\r\n    this[offset + 3] = (value & 0xff)\r\n    return offset + 4\r\n  }\r\n\r\n  function checkIEEE754 (buf, value, offset, ext, max, min) {\r\n    if (offset + ext > buf.length) throw new RangeError('Index out of range')\r\n    if (offset < 0) throw new RangeError('Index out of range')\r\n  }\r\n\r\n  function writeFloat (buf, value, offset, littleEndian, noAssert) {\r\n    value = +value\r\n    offset = offset >>> 0\r\n    if (!noAssert) {\r\n      checkIEEE754(buf, value, offset, 4, 3.4028234663852886e+38, -3.4028234663852886e+38)\r\n    }\r\n    ieee754.write(buf, value, offset, littleEndian, 23, 4)\r\n    return offset + 4\r\n  }\r\n\r\n  Buffer.prototype.writeFloatLE = function writeFloatLE (value, offset, noAssert) {\r\n    return writeFloat(this, value, offset, true, noAssert)\r\n  }\r\n\r\n  Buffer.prototype.writeFloatBE = function writeFloatBE (value, offset, noAssert) {\r\n    return writeFloat(this, value, offset, false, noAssert)\r\n  }\r\n\r\n  function writeDouble (buf, value, offset, littleEndian, noAssert) {\r\n    value = +value\r\n    offset = offset >>> 0\r\n    if (!noAssert) {\r\n      checkIEEE754(buf, value, offset, 8, 1.7976931348623157E+308, -1.7976931348623157E+308)\r\n    }\r\n    ieee754.write(buf, value, offset, littleEndian, 52, 8)\r\n    return offset + 8\r\n  }\r\n\r\n  Buffer.prototype.writeDoubleLE = function writeDoubleLE (value, offset, noAssert) {\r\n    return writeDouble(this, value, offset, true, noAssert)\r\n  }\r\n\r\n  Buffer.prototype.writeDoubleBE = function writeDoubleBE (value, offset, noAssert) {\r\n    return writeDouble(this, value, offset, false, noAssert)\r\n  }\r\n\r\n  // copy(targetBuffer, targetStart=0, sourceStart=0, sourceEnd=buffer.length)\r\n  Buffer.prototype.copy = function copy (target, targetStart, start, end) {\r\n    if (!Buffer.isBuffer(target)) throw new TypeError('argument should be a Buffer')\r\n    if (!start) start = 0\r\n    if (!end && end !== 0) end = this.length\r\n    if (targetStart >= target.length) targetStart = target.length\r\n    if (!targetStart) targetStart = 0\r\n    if (end > 0 && end < start) end = start\r\n\r\n    // Copy 0 bytes; we're done\r\n    if (end === start) return 0\r\n    if (target.length === 0 || this.length === 0) return 0\r\n\r\n    // Fatal error conditions\r\n    if (targetStart < 0) {\r\n      throw new RangeError('targetStart out of bounds')\r\n    }\r\n    if (start < 0 || start >= this.length) throw new RangeError('Index out of range')\r\n    if (end < 0) throw new RangeError('sourceEnd out of bounds')\r\n\r\n    // Are we oob?\r\n    if (end > this.length) end = this.length\r\n    if (target.length - targetStart < end - start) {\r\n      end = target.length - targetStart + start\r\n    }\r\n\r\n    var len = end - start\r\n\r\n    if (this === target && typeof Uint8Array.prototype.copyWithin === 'function') {\r\n      // Use built-in when available, missing from IE11\r\n      this.copyWithin(targetStart, start, end)\r\n    } else if (this === target && start < targetStart && targetStart < end) {\r\n      // descending copy from end\r\n      for (var i = len - 1; i >= 0; --i) {\r\n        target[i + targetStart] = this[i + start]\r\n      }\r\n    } else {\r\n      Uint8Array.prototype.set.call(\r\n        target,\r\n        this.subarray(start, end),\r\n        targetStart\r\n      )\r\n    }\r\n\r\n    return len\r\n  }\r\n\r\n  // Usage:\r\n  //    buffer.fill(number[, offset[, end]])\r\n  //    buffer.fill(buffer[, offset[, end]])\r\n  //    buffer.fill(string[, offset[, end]][, encoding])\r\n  Buffer.prototype.fill = function fill (val, start, end, encoding) {\r\n    // Handle string cases:\r\n    if (typeof val === 'string') {\r\n      if (typeof start === 'string') {\r\n        encoding = start\r\n        start = 0\r\n        end = this.length\r\n      } else if (typeof end === 'string') {\r\n        encoding = end\r\n        end = this.length\r\n      }\r\n      if (encoding !== undefined && typeof encoding !== 'string') {\r\n        throw new TypeError('encoding must be a string')\r\n      }\r\n      if (typeof encoding === 'string' && !Buffer.isEncoding(encoding)) {\r\n        throw new TypeError('Unknown encoding: ' + encoding)\r\n      }\r\n      if (val.length === 1) {\r\n        var code = val.charCodeAt(0)\r\n        if ((encoding === 'utf8' && code < 128) ||\r\n            encoding === 'latin1') {\r\n          // Fast path: If `val` fits into a single byte, use that numeric value.\r\n          val = code\r\n        }\r\n      }\r\n    } else if (typeof val === 'number') {\r\n      val = val & 255\r\n    }\r\n\r\n    // Invalid ranges are not set to a default, so can range check early.\r\n    if (start < 0 || this.length < start || this.length < end) {\r\n      throw new RangeError('Out of range index')\r\n    }\r\n\r\n    if (end <= start) {\r\n      return this\r\n    }\r\n\r\n    start = start >>> 0\r\n    end = end === undefined ? this.length : end >>> 0\r\n\r\n    if (!val) val = 0\r\n\r\n    var i\r\n    if (typeof val === 'number') {\r\n      for (i = start; i < end; ++i) {\r\n        this[i] = val\r\n      }\r\n    } else {\r\n      var bytes = Buffer.isBuffer(val)\r\n        ? val\r\n        : new Buffer(val, encoding)\r\n      var len = bytes.length\r\n      if (len === 0) {\r\n        throw new TypeError('The value \"' + val +\r\n          '\" is invalid for argument \"value\"')\r\n      }\r\n      for (i = 0; i < end - start; ++i) {\r\n        this[i + start] = bytes[i % len]\r\n      }\r\n    }\r\n\r\n    return this\r\n  }\r\n\r\n  // HELPER FUNCTIONS\r\n  // ================\r\n\r\n  var INVALID_BASE64_RE = /[^+/0-9A-Za-z-_]/g\r\n\r\n  function base64clean (str) {\r\n    // Node takes equal signs as end of the Base64 encoding\r\n    str = str.split('=')[0]\r\n    // Node strips out invalid characters like \\n and \\t from the string, base64-js does not\r\n    str = str.trim().replace(INVALID_BASE64_RE, '')\r\n    // Node converts strings with length < 2 to ''\r\n    if (str.length < 2) return ''\r\n    // Node allows for non-padded base64 strings (missing trailing ===), base64-js does not\r\n    while (str.length % 4 !== 0) {\r\n      str = str + '='\r\n    }\r\n    return str\r\n  }\r\n\r\n  function toHex (n) {\r\n    if (n < 16) return '0' + n.toString(16)\r\n    return n.toString(16)\r\n  }\r\n\r\n  function utf8ToBytes (string, units) {\r\n    units = units || Infinity\r\n    var codePoint\r\n    var length = string.length\r\n    var leadSurrogate = null\r\n    var bytes = []\r\n\r\n    for (var i = 0; i < length; ++i) {\r\n      codePoint = string.charCodeAt(i)\r\n\r\n      // is surrogate component\r\n      if (codePoint > 0xD7FF && codePoint < 0xE000) {\r\n        // last char was a lead\r\n        if (!leadSurrogate) {\r\n          // no lead yet\r\n          if (codePoint > 0xDBFF) {\r\n            // unexpected trail\r\n            if ((units -= 3) > -1) bytes.push(0xEF, 0xBF, 0xBD)\r\n            continue\r\n          } else if (i + 1 === length) {\r\n            // unpaired lead\r\n            if ((units -= 3) > -1) bytes.push(0xEF, 0xBF, 0xBD)\r\n            continue\r\n          }\r\n\r\n          // valid lead\r\n          leadSurrogate = codePoint\r\n\r\n          continue\r\n        }\r\n\r\n        // 2 leads in a row\r\n        if (codePoint < 0xDC00) {\r\n          if ((units -= 3) > -1) bytes.push(0xEF, 0xBF, 0xBD)\r\n          leadSurrogate = codePoint\r\n          continue\r\n        }\r\n\r\n        // valid surrogate pair\r\n        codePoint = (leadSurrogate - 0xD800 << 10 | codePoint - 0xDC00) + 0x10000\r\n      } else if (leadSurrogate) {\r\n        // valid bmp char, but last char was a lead\r\n        if ((units -= 3) > -1) bytes.push(0xEF, 0xBF, 0xBD)\r\n      }\r\n\r\n      leadSurrogate = null\r\n\r\n      // encode utf8\r\n      if (codePoint < 0x80) {\r\n        if ((units -= 1) < 0) break\r\n        bytes.push(codePoint)\r\n      } else if (codePoint < 0x800) {\r\n        if ((units -= 2) < 0) break\r\n        bytes.push(\r\n          codePoint >> 0x6 | 0xC0,\r\n          codePoint & 0x3F | 0x80\r\n        )\r\n      } else if (codePoint < 0x10000) {\r\n        if ((units -= 3) < 0) break\r\n        bytes.push(\r\n          codePoint >> 0xC | 0xE0,\r\n          codePoint >> 0x6 & 0x3F | 0x80,\r\n          codePoint & 0x3F | 0x80\r\n        )\r\n      } else if (codePoint < 0x110000) {\r\n        if ((units -= 4) < 0) break\r\n        bytes.push(\r\n          codePoint >> 0x12 | 0xF0,\r\n          codePoint >> 0xC & 0x3F | 0x80,\r\n          codePoint >> 0x6 & 0x3F | 0x80,\r\n          codePoint & 0x3F | 0x80\r\n        )\r\n      } else {\r\n        throw new Error('Invalid code point')\r\n      }\r\n    }\r\n\r\n    return bytes\r\n  }\r\n\r\n  function asciiToBytes (str) {\r\n    var byteArray = []\r\n    for (var i = 0; i < str.length; ++i) {\r\n      // Node's code seems to be doing this and not & 0x7F..\r\n      byteArray.push(str.charCodeAt(i) & 0xFF)\r\n    }\r\n    return byteArray\r\n  }\r\n\r\n  function utf16leToBytes (str, units) {\r\n    var c, hi, lo\r\n    var byteArray = []\r\n    for (var i = 0; i < str.length; ++i) {\r\n      if ((units -= 2) < 0) break\r\n\r\n      c = str.charCodeAt(i)\r\n      hi = c >> 8\r\n      lo = c % 256\r\n      byteArray.push(lo)\r\n      byteArray.push(hi)\r\n    }\r\n\r\n    return byteArray\r\n  }\r\n\r\n  function base64ToBytes (str) {\r\n    return base64.toByteArray(base64clean(str))\r\n  }\r\n\r\n  function blitBuffer (src, dst, offset, length) {\r\n    for (var i = 0; i < length; ++i) {\r\n      if ((i + offset >= dst.length) || (i >= src.length)) break\r\n      dst[i + offset] = src[i]\r\n    }\r\n    return i\r\n  }\r\n\r\n  // ArrayBuffers from another context (i.e. an iframe) do not pass the `instanceof` check\r\n  // but they should be treated as valid. See: https://github.com/feross/buffer/issues/166\r\n  function isArrayBuffer (obj) {\r\n    return obj instanceof ArrayBuffer ||\r\n      (obj != null && obj.constructor != null && obj.constructor.name === 'ArrayBuffer' &&\r\n        typeof obj.byteLength === 'number')\r\n  }\r\n\r\n  function numberIsNaN (obj) {\r\n    return obj !== obj // eslint-disable-line no-self-compare\r\n  }\r\n\r\n  return exports;\r\n\r\n});"]}