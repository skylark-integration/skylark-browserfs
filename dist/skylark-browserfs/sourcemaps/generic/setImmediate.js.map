{"version":3,"sources":["generic/setImmediate.js"],"names":["define","global","bfsSetImmediate","setImmediate","gScope","timeouts","messageName","importScripts","postMessage","postMessageIsAsync","oldOnMessage","onmessage","canUsePostMessage","fn","push","handleMessage","event","source","self","data","stopPropagation","cancelBubble","length","shift","addEventListener","attachEvent","MessageChannel","channel","port1","port2","setTimeout"],"mappings":";;;;;;;AAAAA,QAAQ,kBAAmB,SAAUC,GACjC,aAIA,IAAIC,EACJ,GAA8B,oBAAnB,aACPA,EAAkBC,iBAEjB,CACD,MAAMC,EAASH,EACTI,KACAC,EAAc,uBAcpB,GAb0B,WACtB,QAAoC,IAAzBF,EAAOG,gBAAkCH,EAAOI,YACvD,OAAO,EAEX,IAAIC,GAAqB,EACzB,MAAMC,EAAeN,EAAOO,UAM5B,OALAP,EAAOO,UAAY,WACfF,GAAqB,GAEzBL,EAAOI,YAAY,GAAI,KACvBJ,EAAOO,UAAYD,EACZD,EAEPG,GAAqB,CACrBV,EAAkB,SAAUW,GACxBR,EAASS,KAAKD,GACdT,EAAOI,YAAYF,EAAa,MAEpC,MAAMS,EAAgB,SAAUC,GAC5B,GAAIA,EAAMC,SAAWC,MAAQF,EAAMG,OAASb,IACpCU,EAAMI,gBACNJ,EAAMI,kBAGNJ,EAAMK,cAAe,EAErBhB,EAASiB,OAAS,GAAG,CAErB,OADWjB,EAASkB,OACbV,KAIfT,EAAOoB,iBACPpB,EAAOoB,iBAAiB,UAAWT,GAAe,GAGlDX,EAAOqB,YAAY,YAAaV,QAGnC,GAAIX,EAAOsB,eAAgB,CAE5B,MAAMC,EAAU,IAAIvB,EAAOsB,eAC3BC,EAAQC,MAAMjB,UAAY,CAACK,IACvB,GAAIX,EAASiB,OAAS,EAClB,OAAOjB,EAASkB,OAATlB,KAGfH,EAAkB,CAACW,IACfR,EAASS,KAAKD,GACdc,EAAQE,MAAMrB,YAAY,WAI9BN,EAAkB,SAAUW,GACxB,OAAOiB,WAAWjB,EAAI,IAKlC,OAAOX","file":"../../generic/setImmediate.js","sourcesContent":["define(['../core/global'], function (global) {\n    'use strict';\n    /**\n     * @hidden\n     */\n    let bfsSetImmediate;\n    if (typeof (setImmediate) !== \"undefined\") {\n        bfsSetImmediate = setImmediate;\n    }\n    else {\n        const gScope = global;\n        const timeouts = [];\n        const messageName = \"zero-timeout-message\";\n        const canUsePostMessage = function () {\n            if (typeof gScope.importScripts !== 'undefined' || !gScope.postMessage) {\n                return false;\n            }\n            let postMessageIsAsync = true;\n            const oldOnMessage = gScope.onmessage;\n            gScope.onmessage = function () {\n                postMessageIsAsync = false;\n            };\n            gScope.postMessage('', '*');\n            gScope.onmessage = oldOnMessage;\n            return postMessageIsAsync;\n        };\n        if (canUsePostMessage()) {\n            bfsSetImmediate = function (fn) {\n                timeouts.push(fn);\n                gScope.postMessage(messageName, \"*\");\n            };\n            const handleMessage = function (event) {\n                if (event.source === self && event.data === messageName) {\n                    if (event.stopPropagation) {\n                        event.stopPropagation();\n                    }\n                    else {\n                        event.cancelBubble = true;\n                    }\n                    if (timeouts.length > 0) {\n                        const fn = timeouts.shift();\n                        return fn();\n                    }\n                }\n            };\n            if (gScope.addEventListener) {\n                gScope.addEventListener('message', handleMessage, true);\n            }\n            else {\n                gScope.attachEvent('onmessage', handleMessage);\n            }\n        }\n        else if (gScope.MessageChannel) {\n            // WebWorker MessageChannel\n            const channel = new gScope.MessageChannel();\n            channel.port1.onmessage = (event) => {\n                if (timeouts.length > 0) {\n                    return timeouts.shift()();\n                }\n            };\n            bfsSetImmediate = (fn) => {\n                timeouts.push(fn);\n                channel.port2.postMessage('');\n            };\n        }\n        else {\n            bfsSetImmediate = function (fn) {\n                return setTimeout(fn, 0);\n            };\n        }\n    }\n\n    return bfsSetImmediate;\n});"]}