{"version":3,"sources":["core/node_fs.js"],"names":["define","FS","fs","_fsMock","fsProto","prototype","Object","getOwnPropertyNames","forEach","key","apply","arguments","newFs","Stats"],"mappings":";;;;;;;AAAAA,QAAQ,QAAS,SAAUC,GACvB,aACA,IAAIC,EAAK,IAAID,EACb,MAAME,KACAC,EAAUH,EAAGI,UAoBnB,OAnBaC,OAAOC,oBAAoBH,GACnCI,QAAQC,IACc,mBAAZP,EAAGO,GACVN,EAAQM,GAAO,WACX,OAAOP,EAAGO,GAAKC,MAAMR,EAAIS,YAG7BR,EAAQM,GAAOP,EAAGO,KAG1BN,EAAwB,eAAI,SAAUS,GAClCV,EAAKU,GAETT,EAAqB,YAAI,WACrB,OAAOD,GAEXC,EAAY,GAAIF,EAChBE,EAAe,MAAIF,EAAGY,MAEfV","file":"../../core/node_fs.js","sourcesContent":["define(['./FS'], function (FS) {\n    'use strict';\n    let fs = new FS();\n    const _fsMock = {};\n    const fsProto = FS.prototype;\n    const keys = Object.getOwnPropertyNames(fsProto);\n    keys.forEach(key => {\n        if (typeof fs[key] === 'function') {\n            _fsMock[key] = function () {\n                return fs[key].apply(fs, arguments);\n            };\n        } else {\n            _fsMock[key] = fs[key];\n        }\n    });\n    _fsMock['changeFSModule'] = function (newFs) {\n        fs = newFs;\n    };\n    _fsMock['getFSModule'] = function () {\n        return fs;\n    };\n    _fsMock['FS'] = FS;\n    _fsMock['Stats'] = FS.Stats;\n\n    return _fsMock;\n});"]}