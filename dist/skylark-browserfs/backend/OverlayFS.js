/**
 * skylark-browserfs - A version of browserfs that ported to running on skylarkjs.
 * @author 
 * @version v0.9.0
 * @link 
 * @license MIT
 */
define(["../core/file_system","../core/api_error","../core/file_flag","../core/node_fs_stats","../generic/preload_file","../generic/locked_fs","../libs/path"],function(e,t,i,s,r,n,l){"use strict";const{BaseFileSystem:a}=e,{ApiError:h,ErrorCode:c}=t,{FileFlag:o,ActionType:d}=i,{Stats:y}=s,{PreloadFile:u}=r,_="/.deletedFiles.log";function w(e){return 146|e}function b(e){return o.getFileFlag(e)}class f extends u{constructor(e,t,i,s,r){super(e,t,i,s,r)}sync(e){this.isDirty()?this._fs._syncAsync(this,t=>{this.resetDirty(),e(t)}):e(null)}syncSync(){this.isDirty()&&(this._fs._syncSync(this),this.resetDirty())}close(e){this.sync(e)}closeSync(){this.syncSync()}}class S extends a{constructor(e,t){if(super(),this._isInitialized=!1,this._initializeCallbacks=[],this._deletedFiles={},this._deleteLog="",this._deleteLogUpdatePending=!1,this._deleteLogUpdateNeeded=!1,this._deleteLogError=null,this._writable=e,this._readable=t,this._writable.isReadOnly())throw new h(c.EINVAL,"Writable file system must be writable.")}static isAvailable(){return!0}getOverlayedFileSystems(){return{readable:this._readable,writable:this._writable}}_syncAsync(e,t){this.createParentDirectoriesAsync(e.getPath(),i=>{if(i)return t(i);this._writable.writeFile(e.getPath(),e.getBuffer(),null,b("w"),e.getStats().mode,t)})}_syncSync(e){this.createParentDirectories(e.getPath()),this._writable.writeFileSync(e.getPath(),e.getBuffer(),null,b("w"),e.getStats().mode)}getName(){return E.Name}_initialize(e){const t=this._initializeCallbacks,i=e=>{this._isInitialized=!e,this._initializeCallbacks=[],t.forEach(t=>t(e))};if(this._isInitialized)return e();t.push(e),1===t.length&&this._writable.readFile(_,"utf8",b("r"),(e,t)=>{if(e){if(e.errno!==c.ENOENT)return i(e)}else this._deleteLog=t;this._reparseDeletionLog(),i()})}isReadOnly(){return!1}supportsSynch(){return this._readable.supportsSynch()&&this._writable.supportsSynch()}supportsLinks(){return!1}supportsProps(){return this._readable.supportsProps()&&this._writable.supportsProps()}getDeletionLog(){return this._deleteLog}restoreDeletionLog(e){this._deleteLog=e,this._reparseDeletionLog(),this.updateLog("")}rename(e,t,i){if(this.checkInitAsync(i)&&!this.checkPathAsync(e,i)&&!this.checkPathAsync(t,i))return e===_||t===_?i(h.EPERM("Cannot rename deletion log.")):e===t?i():void this.stat(e,!1,(s,r)=>s?i(s):this.stat(t,!1,(s,n)=>{const a=this;function o(s){const r=s.shift();if(!r)return i();const n=l.resolve(e,r),h=l.resolve(t,r);a.rename(n,h,e=>{if(e)return i(e);o(s)})}let d=511;if(r.isDirectory()){if(s)return s.errno!==c.ENOENT?i(s):this._writable.exists(e,s=>{if(s)return this._writable.rename(e,t,i);this._writable.mkdir(t,d,t=>{if(t)return i(t);this._readable.readdir(e,(e,t)=>{if(e)return i();o(t)})})});if(d=n.mode,!n.isDirectory())return i(h.ENOTDIR(t));this.readdir(t,(s,r)=>{if(r&&r.length)return i(h.ENOTEMPTY(t));this._readable.readdir(e,(e,t)=>{if(e)return i();o(t)})})}if(n&&n.isDirectory())return i(h.EISDIR(t));this.readFile(e,null,b("r"),(s,n)=>s?i(s):this.writeFile(t,n,null,b("w"),r.mode,t=>t?i(t):this.unlink(e,i)))}))}renameSync(e,t){if(this.checkInitialized(),this.checkPath(e),this.checkPath(t),e===_||t===_)throw h.EPERM("Cannot rename deletion log.");const i=this.statSync(e,!1);if(i.isDirectory()){if(e===t)return;let i=511;if(this.existsSync(t)){const e=this.statSync(t,!1);if(i=e.mode,!e.isDirectory())throw h.ENOTDIR(t);if(this.readdirSync(t).length>0)throw h.ENOTEMPTY(t)}this._writable.existsSync(e)?this._writable.renameSync(e,t):this._writable.existsSync(t)||this._writable.mkdirSync(t,i),this._readable.existsSync(e)&&this._readable.readdirSync(e).forEach(i=>{this.renameSync(l.resolve(e,i),l.resolve(t,i))})}else{if(this.existsSync(t)&&this.statSync(t,!1).isDirectory())throw h.EISDIR(t);this.writeFileSync(t,this.readFileSync(e,null,b("r")),null,b("w"),i.mode)}e!==t&&this.existsSync(e)&&this.unlinkSync(e)}stat(e,t,i){this.checkInitAsync(i)&&this._writable.stat(e,t,(s,r)=>{s&&s.errno===c.ENOENT?(this._deletedFiles[e]&&i(h.ENOENT(e)),this._readable.stat(e,t,(e,t)=>{t&&((t=y.clone(t)).mode=w(t.mode)),i(e,t)})):i(s,r)})}statSync(e,t){this.checkInitialized();try{return this._writable.statSync(e,t)}catch(i){if(this._deletedFiles[e])throw h.ENOENT(e);const s=y.clone(this._readable.statSync(e,t));return s.mode=w(s.mode),s}}open(e,t,i,s){this.checkInitAsync(s)&&!this.checkPathAsync(e,s)&&this.stat(e,!1,(r,n)=>{if(n)switch(t.pathExistsAction()){case d.TRUNCATE_FILE:return this.createParentDirectoriesAsync(e,r=>{if(r)return s(r);this._writable.open(e,t,i,s)});case d.NOP:return this._writable.exists(e,r=>{r?this._writable.open(e,t,i,s):((n=y.clone(n)).mode=i,this._readable.readFile(e,null,b("r"),(i,r)=>{if(i)return s(i);-1===n.size&&(n.size=r.length);const l=new f(this,e,t,n,r);s(null,l)}))});default:return s(h.EEXIST(e))}else switch(t.pathNotExistsAction()){case d.CREATE_FILE:return this.createParentDirectoriesAsync(e,r=>r?s(r):this._writable.open(e,t,i,s));default:return s(h.ENOENT(e))}})}openSync(e,t,i){if(this.checkInitialized(),this.checkPath(e),e===_)throw h.EPERM("Cannot open deletion log.");if(this.existsSync(e))switch(t.pathExistsAction()){case d.TRUNCATE_FILE:return this.createParentDirectories(e),this._writable.openSync(e,t,i);case d.NOP:if(this._writable.existsSync(e))return this._writable.openSync(e,t,i);{const s=this._readable.readFileSync(e,null,b("r")),r=y.clone(this._readable.statSync(e,!1));return r.mode=i,new f(this,e,t,r,s)}default:throw h.EEXIST(e)}else switch(t.pathNotExistsAction()){case d.CREATE_FILE:return this.createParentDirectories(e),this._writable.openSync(e,t,i);default:throw h.ENOENT(e)}}unlink(e,t){this.checkInitAsync(t)&&!this.checkPathAsync(e,t)&&this.exists(e,i=>{if(!i)return t(h.ENOENT(e));this._writable.exists(e,i=>{if(i)return this._writable.unlink(e,i=>{if(i)return t(i);this.exists(e,i=>{i&&this.deletePath(e),t(null)})});this.deletePath(e),t(null)})})}unlinkSync(e){if(this.checkInitialized(),this.checkPath(e),!this.existsSync(e))throw h.ENOENT(e);this._writable.existsSync(e)&&this._writable.unlinkSync(e),this.existsSync(e)&&this.deletePath(e)}rmdir(e,t){if(!this.checkInitAsync(t))return;const i=()=>{this.readdir(e,(i,s)=>i?t(i):s.length?t(h.ENOTEMPTY(e)):(this.deletePath(e),void t(null)))};this.exists(e,s=>{if(!s)return t(h.ENOENT(e));this._writable.exists(e,s=>{s?this._writable.rmdir(e,s=>{if(s)return t(s);this._readable.exists(e,e=>{e?i():t()})}):i()})})}rmdirSync(e){if(this.checkInitialized(),!this.existsSync(e))throw h.ENOENT(e);if(this._writable.existsSync(e)&&this._writable.rmdirSync(e),this.existsSync(e)){if(this.readdirSync(e).length>0)throw h.ENOTEMPTY(e);this.deletePath(e)}}mkdir(e,t,i){this.checkInitAsync(i)&&this.exists(e,s=>{if(s)return i(h.EEXIST(e));this.createParentDirectoriesAsync(e,s=>{if(s)return i(s);this._writable.mkdir(e,t,i)})})}mkdirSync(e,t){if(this.checkInitialized(),this.existsSync(e))throw h.EEXIST(e);this.createParentDirectories(e),this._writable.mkdirSync(e,t)}readdir(e,t){this.checkInitAsync(t)&&this.stat(e,!1,(i,s)=>i?t(i):s.isDirectory()?void this._writable.readdir(e,(i,s)=>{if(i&&"ENOENT"!==i.code)return t(i);!i&&s||(s=[]),this._readable.readdir(e,(i,r)=>{!i&&r||(r=[]);const n={},l=s.concat(r.filter(t=>!this._deletedFiles[`${e}/${t}`])).filter(e=>{const t=!n[e];return n[e]=!0,t});t(null,l)})}):t(h.ENOTDIR(e)))}readdirSync(e){if(this.checkInitialized(),!this.statSync(e,!1).isDirectory())throw h.ENOTDIR(e);let t=[];try{t=t.concat(this._writable.readdirSync(e))}catch(e){}try{t=t.concat(this._readable.readdirSync(e).filter(t=>!this._deletedFiles[`${e}/${t}`]))}catch(e){}const i={};return t.filter(e=>{const t=!i[e];return i[e]=!0,t})}exists(e,t){this.checkInitialized(),this._writable.exists(e,i=>{if(i)return t(!0);this._readable.exists(e,i=>{t(i&&!0!==this._deletedFiles[e])})})}existsSync(e){return this.checkInitialized(),this._writable.existsSync(e)||this._readable.existsSync(e)&&!0!==this._deletedFiles[e]}chmod(e,t,i,s){this.checkInitAsync(s)&&this.operateOnWritableAsync(e,r=>{if(r)return s(r);this._writable.chmod(e,t,i,s)})}chmodSync(e,t,i){this.checkInitialized(),this.operateOnWritable(e,()=>{this._writable.chmodSync(e,t,i)})}chown(e,t,i,s,r){this.checkInitAsync(r)&&this.operateOnWritableAsync(e,n=>{if(n)return r(n);this._writable.chown(e,t,i,s,r)})}chownSync(e,t,i,s){this.checkInitialized(),this.operateOnWritable(e,()=>{this._writable.chownSync(e,t,i,s)})}utimes(e,t,i,s){this.checkInitAsync(s)&&this.operateOnWritableAsync(e,r=>{if(r)return s(r);this._writable.utimes(e,t,i,s)})}utimesSync(e,t,i){this.checkInitialized(),this.operateOnWritable(e,()=>{this._writable.utimesSync(e,t,i)})}deletePath(e){this._deletedFiles[e]=!0,this.updateLog(`d${e}\n`)}updateLog(e){this._deleteLog+=e,this._deleteLogUpdatePending?this._deleteLogUpdateNeeded=!0:(this._deleteLogUpdatePending=!0,this._writable.writeFile(_,this._deleteLog,"utf8",o.getFileFlag("w"),420,e=>{this._deleteLogUpdatePending=!1,e?this._deleteLogError=e:this._deleteLogUpdateNeeded&&(this._deleteLogUpdateNeeded=!1,this.updateLog(""))}))}_reparseDeletionLog(){this._deletedFiles={},this._deleteLog.split("\n").forEach(e=>{this._deletedFiles[e.slice(1)]="d"===e.slice(0,1)})}checkInitialized(){if(!this._isInitialized)throw new h(c.EPERM,"OverlayFS is not initialized. Please initialize OverlayFS using its initialize() method before using it.");if(null!==this._deleteLogError){const e=this._deleteLogError;throw this._deleteLogError=null,e}}checkInitAsync(e){if(!this._isInitialized)return e(new h(c.EPERM,"OverlayFS is not initialized. Please initialize OverlayFS using its initialize() method before using it.")),!1;if(null!==this._deleteLogError){const t=this._deleteLogError;return this._deleteLogError=null,e(t),!1}return!0}checkPath(e){if(e===_)throw h.EPERM(e)}checkPathAsync(e,t){return e===_&&(t(h.EPERM(e)),!0)}createParentDirectoriesAsync(e,t){let i=l.dirname(e);const s=[],r=this;this._writable.stat(i,!1,function e(n,a){n?"/"===i?t(new h(c.EBUSY,"Invariant failed: root does not exist!")):(s.push(i),i=l.dirname(i),r._writable.stat(i,!1,e)):function e(){if(!s.length)return t();const i=s.pop();r._readable.stat(i,!1,(s,n)=>{if(!n)return t();r._writable.mkdir(i,n.mode,i=>{if(i)return t(i);e()})})}()})}createParentDirectories(e){let t=l.dirname(e),i=[];for(;!this._writable.existsSync(t);)i.push(t),t=l.dirname(t);(i=i.reverse()).forEach(e=>{this._writable.mkdirSync(e,this.statSync(e,!1).mode)})}operateOnWritable(e,t){if(!this.existsSync(e))throw h.ENOENT(e);this._writable.existsSync(e)||this.copyToWritable(e),t()}operateOnWritableAsync(e,t){this.exists(e,i=>{if(!i)return t(h.ENOENT(e));this._writable.exists(e,i=>{if(!i)return this.copyToWritableAsync(e,t);t()})})}copyToWritable(e){const t=this.statSync(e,!1);t.isDirectory()?this._writable.mkdirSync(e,t.mode):this.writeFileSync(e,this._readable.readFileSync(e,null,b("r")),null,b("w"),this.statSync(e,!1).mode)}copyToWritableAsync(e,t){this.stat(e,!1,(i,s)=>i?t(i):s.isDirectory()?this._writable.mkdir(e,s.mode,t):void this._readable.readFile(e,null,b("r"),(i,r)=>{if(i)return t(i);this.writeFile(e,r,null,b("w"),s.mode,t)}))}}class E extends n{constructor(e,t){super(new S(e,t))}static Create(e,t){try{const i=new E(e.writable,e.readable);i._initialize(e=>{t(e,i)})}catch(e){t(e)}}static isAvailable(){return S.isAvailable()}getOverlayedFileSystems(){return super.getFSUnlocked().getOverlayedFileSystems()}unwrap(){return super.getFSUnlocked()}_initialize(e){super.getFSUnlocked()._initialize(e)}}return E.Name="OverlayFS",E.Options={writable:{type:"object",description:"The file system to write modified files to."},readable:{type:"object",description:"The file system that initially populates this file system."}},E});
//# sourceMappingURL=../sourcemaps/backend/OverlayFS.js.map
